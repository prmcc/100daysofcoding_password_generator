#phrase Generator Project
import random
phrase = ['The', 'goal', 'of', 'this', 'book', 'is', 'to', 'teach', 'you', 'to', 'think', 'like', 'a', 'computer', 'scientist', 'This', 'way', 'of', 'thinking', 'combines', 'some', 'of', 'the', 'best', 'features', 'of', 'mathematics', 'engineering', 'and', 'natural', 'science', 'Like', 'mathematicians', 'computer', 'scientists', 'use', 'formal', 'languages', 'to', 'denote', 'ideas', '(specifically', 'computations)', 'Like', 'engineers', 'they', 'design', 'things', 'assembling', 'components', 'into', 'systems', 'and', 'evaluating', 'tradeoffs', 'among', 'alternatives', 'Like', 'scientists', 'they', 'observe', 'the', 'behavior', 'of', 'complex', 'systems', 'form', 'hypotheses', 'and', 'test', 'predictions', 'The', 'single', 'most', 'important', 'skill', 'for', 'a', 'computer', 'scientist', 'is', 'problem', 'solving', 'Problem', 'solving', 'means', 'the', 'ability', 'to', 'formulate', 'problems', 'think', 'creatively', 'about', 'solutions', 'and', 'express', 'a', 'solution', 'clearly', 'and', 'accurately', 'As', 'it', 'turns', 'out', 'the', 'process', 'of', 'learning', 'to', 'program', 'is', 'an', 'excellent', 'opportunity', 'to', 'practice', 'problem-solving', 'skills', 'Thatâ€™s', 'why', 'this', 'chapter', 'is', 'called', 'The', 'way', 'of', 'the', 'program', 'On', 'one', 'level', 'you', 'will', 'be', 'learning', 'to', 'program', 'a', 'useful', 'skill', 'by', 'itself', 'On', 'another', 'level', 'you', 'will', 'use', 'programming', 'as', 'a', 'means', 'to', 'an', 'end', 'As', 'we', 'go', 'along', 'that', 'end', 'will', 'become', 'clearer']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

print("Welcome to the Pyphrase Generator!")
nr_phrases= int(input("How many words would you like in your passphrase?\n")) 
nr_numbers = int(input(f"How many numbers would you like?\n"))
nr_symbols = int(input(f"How many symbols would you like?\n"))

#Eazy Level - Order not randomized:
user_phrase_easy = ""
start_phrase= random.randrange(0,(len(phrase)-1))
start_numbers= random.randrange(0,(len(numbers)-1))
start_symbols= random.randrange(0,(len(symbols)-1))

print("\nEASY LEVEL")
for i in range(0,nr_phrases):
  user_phrase_easy += random.choice(phrase)

for i in range(0,nr_numbers):
  user_phrase_easy += random.choice(numbers)

for i in range(0,nr_symbols):
  user_phrase_easy += random.choice(symbols)

print(user_phrase_easy)


#Hard Level - Order of characters randomized:
print("\nHARD LEVEL")
user_phrase_hard = []


for i in range(0,nr_phrases):
  user_phrase_hard.append(random.choice(phrase))
  
  
for i in range(0,nr_numbers):
  user_phrase_hard.append(random.choice(numbers))

for i in range(0,nr_symbols):
  user_phrase_hard.append(random.choice(symbols))

print(user_phrase_hard)
random.shuffle(user_phrase_hard)

new_user_phrase_hard = ''.join(str(x) for x in user_phrase_hard)


print("New Hard Phrase")
print(new_user_phrase_hard)

